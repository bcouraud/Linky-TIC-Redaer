

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 19 03:02:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 07/09/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F1840 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0015                     	;# 
    65     0016                     	;# 
    66     0016                     	;# 
    67     0017                     	;# 
    68     0018                     	;# 
    69     0019                     	;# 
    70     001A                     	;# 
    71     001B                     	;# 
    72     001C                     	;# 
    73     001E                     	;# 
    74     001F                     	;# 
    75     008C                     	;# 
    76     0091                     	;# 
    77     0092                     	;# 
    78     0095                     	;# 
    79     0096                     	;# 
    80     0097                     	;# 
    81     0098                     	;# 
    82     0099                     	;# 
    83     009A                     	;# 
    84     009B                     	;# 
    85     009B                     	;# 
    86     009C                     	;# 
    87     009D                     	;# 
    88     009E                     	;# 
    89     010C                     	;# 
    90     0111                     	;# 
    91     0112                     	;# 
    92     0115                     	;# 
    93     0116                     	;# 
    94     0117                     	;# 
    95     0118                     	;# 
    96     0119                     	;# 
    97     011A                     	;# 
    98     011B                     	;# 
    99     011D                     	;# 
   100     011D                     	;# 
   101     018C                     	;# 
   102     0191                     	;# 
   103     0191                     	;# 
   104     0192                     	;# 
   105     0193                     	;# 
   106     0193                     	;# 
   107     0193                     	;# 
   108     0194                     	;# 
   109     0195                     	;# 
   110     0196                     	;# 
   111     0197                     	;# 
   112     0199                     	;# 
   113     019A                     	;# 
   114     019B                     	;# 
   115     019B                     	;# 
   116     019B                     	;# 
   117     019B                     	;# 
   118     019C                     	;# 
   119     019C                     	;# 
   120     019D                     	;# 
   121     019E                     	;# 
   122     019F                     	;# 
   123     020C                     	;# 
   124     0211                     	;# 
   125     0211                     	;# 
   126     0212                     	;# 
   127     0212                     	;# 
   128     0213                     	;# 
   129     0213                     	;# 
   130     0214                     	;# 
   131     0214                     	;# 
   132     0215                     	;# 
   133     0215                     	;# 
   134     0215                     	;# 
   135     0216                     	;# 
   136     0216                     	;# 
   137     0217                     	;# 
   138     0217                     	;# 
   139     0291                     	;# 
   140     0291                     	;# 
   141     0292                     	;# 
   142     0293                     	;# 
   143     0294                     	;# 
   144     0295                     	;# 
   145     0295                     	;# 
   146     0296                     	;# 
   147     0391                     	;# 
   148     0392                     	;# 
   149     0393                     	;# 
   150     039A                     	;# 
   151     039C                     	;# 
   152     039D                     	;# 
   153     039E                     	;# 
   154     039F                     	;# 
   155     0FE4                     	;# 
   156     0FE5                     	;# 
   157     0FE6                     	;# 
   158     0FE7                     	;# 
   159     0FE8                     	;# 
   160     0FE9                     	;# 
   161     0FEA                     	;# 
   162     0FEB                     	;# 
   163     0FED                     	;# 
   164     0FEE                     	;# 
   165     0FEF                     	;# 
   166     0000                     	;# 
   167     0001                     	;# 
   168     0002                     	;# 
   169     0003                     	;# 
   170     0004                     	;# 
   171     0005                     	;# 
   172     0006                     	;# 
   173     0007                     	;# 
   174     0008                     	;# 
   175     0009                     	;# 
   176     000A                     	;# 
   177     000B                     	;# 
   178     000C                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     008C                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     010C                     	;# 
   207     0111                     	;# 
   208     0112                     	;# 
   209     0115                     	;# 
   210     0116                     	;# 
   211     0117                     	;# 
   212     0118                     	;# 
   213     0119                     	;# 
   214     011A                     	;# 
   215     011B                     	;# 
   216     011D                     	;# 
   217     011D                     	;# 
   218     018C                     	;# 
   219     0191                     	;# 
   220     0191                     	;# 
   221     0192                     	;# 
   222     0193                     	;# 
   223     0193                     	;# 
   224     0193                     	;# 
   225     0194                     	;# 
   226     0195                     	;# 
   227     0196                     	;# 
   228     0197                     	;# 
   229     0199                     	;# 
   230     019A                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019B                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019E                     	;# 
   239     019F                     	;# 
   240     020C                     	;# 
   241     0211                     	;# 
   242     0211                     	;# 
   243     0212                     	;# 
   244     0212                     	;# 
   245     0213                     	;# 
   246     0213                     	;# 
   247     0214                     	;# 
   248     0214                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0215                     	;# 
   252     0216                     	;# 
   253     0216                     	;# 
   254     0217                     	;# 
   255     0217                     	;# 
   256     0291                     	;# 
   257     0291                     	;# 
   258     0292                     	;# 
   259     0293                     	;# 
   260     0294                     	;# 
   261     0295                     	;# 
   262     0295                     	;# 
   263     0296                     	;# 
   264     0391                     	;# 
   265     0392                     	;# 
   266     0393                     	;# 
   267     039A                     	;# 
   268     039C                     	;# 
   269     039D                     	;# 
   270     039E                     	;# 
   271     039F                     	;# 
   272     0FE4                     	;# 
   273     0FE5                     	;# 
   274     0FE6                     	;# 
   275     0FE7                     	;# 
   276     0FE8                     	;# 
   277     0FE9                     	;# 
   278     0FEA                     	;# 
   279     0FEB                     	;# 
   280     0FED                     	;# 
   281     0FEE                     	;# 
   282     0FEF                     	;# 
   283                           
   284                           	psect	idataCOMMON
   285     0744                     __pidataCOMMON:
   286                           
   287                           ;initializer for _counterAcquisition
   288     0744  3401               	retlw	1
   289                           
   290                           ;initializer for _thresholdCounterAcquisition
   291     0745  34DC               	retlw	220
   292                           
   293                           ;initializer for _thresholdCounter
   294     0746  3414               	retlw	20
   295                           
   296                           ;initializer for _threshold2
   297     0747  34BB               	retlw	187
   298                           
   299                           ;initializer for _threshold1
   300     0748  34B4               	retlw	180
   301                           
   302                           	psect	nvCOMMON
   303     0078                     __pnvCOMMON:
   304     0078                     _counter:
   305     0078                     	ds	1
   306     000B                     _INTCONbits	set	11
   307     0011                     _PIR1	set	17
   308     000B                     _INTCON	set	11
   309     008C                     _TRISAbits	set	140
   310     009E                     _ADCON1bits	set	158
   311     008C                     _TRISA	set	140
   312     0099                     _OSCCONbits	set	153
   313     0099                     _OSCCON	set	153
   314     0091                     _PIE1	set	145
   315     0095                     _OPTION_REGbits	set	149
   316     009C                     _ADRESH	set	156
   317     009D                     _ADCON0bits	set	157
   318     010C                     _LATAbits	set	268
   319     011D                     _APFCONbits	set	285
   320     010C                     _LATA	set	268
   321     018C                     _ANSELA	set	396
   322     019D                     _RCSTA	set	413
   323     019E                     _TXSTAbits	set	414
   324     019E                     _TXSTA	set	414
   325     019B                     _SPBRG	set	411
   326     019F                     _BAUDCONbits	set	415
   327     018C                     _ANSELAbits	set	396
   328                           
   329                           	psect	cinit
   330     07EC                     start_initialization:	
   331                           ; #config settings
   332                           
   333     07EC                     __initialization:
   334                           
   335                           ; Initialize objects allocated to COMMON
   336     07EC  3044               	movlw	low __pidataCOMMON
   337     07ED  0084               	movwf	4
   338     07EE  3087               	movlw	(high __pidataCOMMON)| (0+128)
   339     07EF  0085               	movwf	5
   340     07F0  0012               	moviw fsr0++
   341     07F1  00F0               	movwf	__pdataCOMMON& (0+127)
   342     07F2  0012               	moviw fsr0++
   343     07F3  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   344     07F4  0012               	moviw fsr0++
   345     07F5  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   346     07F6  0012               	moviw fsr0++
   347     07F7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   348     07F8  0012               	moviw fsr0++
   349     07F9  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   350                           
   351                           ; Clear objects allocated to COMMON
   352     07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   353     07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   354     07FC  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   355     07FD                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358     07FD                     __end_of__initialization:
   359     07FD  0020               	movlb	0
   360     07FE  3187  2F59         	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMMON
   363     0075                     __pbssCOMMON:
   364     0075                     _acquisition:
   365     0075                     	ds	1
   366     0076                     _uart_data:
   367     0076                     	ds	1
   368     0077                     _adc_char:
   369     0077                     	ds	1
   370                           
   371                           	psect	dataCOMMON
   372     0070                     __pdataCOMMON:
   373     0070                     _counterAcquisition:
   374     0070                     	ds	1
   375     0071                     _thresholdCounterAcquisition:
   376     0071                     	ds	1
   377     0072                     _thresholdCounter:
   378     0072                     	ds	1
   379     0073                     _threshold2:
   380     0073                     	ds	1
   381     0074                     _threshold1:
   382     0074                     	ds	1
   383                           
   384                           	psect	cstackCOMMON
   385     0079                     __pcstackCOMMON:
   386     0079                     ?_ADC_Lecture:
   387     0079                     ??_ADC_Lecture:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0079                     ?_main:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0079                     ??_main:	
   394                           ; 1 bytes @ 0x0
   395                           
   396                           
   397                           ; 1 bytes @ 0x0
   398     0079                     	ds	1
   399                           
   400                           	psect	maintext
   401     0759                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 67 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B1F/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   421 ;;      Params:         0       0       0       0
   422 ;;      Locals:         0       0       0       0
   423 ;;      Temps:          1       0       0       0
   424 ;;      Totals:         1       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels required when called: 1
   427 ;; This function calls:
   428 ;;		_ADC_Lecture
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434     0759                     _main:	
   435                           ;psect for function _main
   436                           
   437     0759                     l717:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;main.c: 68:     counter = 1;
   443     0759  01F8               	clrf	_counter
   444     075A  0AF8               	incf	_counter,f
   445     075B  0064               	clrwdt	;# 
   446                           
   447                           ;main.c: 71:     OPTION_REGbits.PSA = 1;
   448     075C  0021               	movlb	1	; select bank1
   449     075D  1595               	bsf	21,3	;volatile
   450     075E                     l719:
   451                           
   452                           ;main.c: 72:     OPTION_REGbits.PS = 0b111;
   453     075E  3007               	movlw	7
   454     075F  0495               	iorwf	21,f	;volatile
   455     0760                     l721:
   456                           
   457                           ;main.c: 73:     INTCON = 0;
   458     0760  018B               	clrf	11	;volatile
   459     0761                     l723:
   460                           
   461                           ;main.c: 74:     PIE1=0;
   462     0761  0191               	clrf	17	;volatile
   463     0762                     l725:
   464                           
   465                           ;main.c: 75:     PIR1=0;
   466     0762  0020               	movlb	0	; select bank0
   467     0763  0191               	clrf	17	;volatile
   468     0764                     l727:
   469                           
   470                           ;main.c: 76:     INTCONbits.GIE = 0;
   471     0764  138B               	bcf	11,7	;volatile
   472     0765                     l729:
   473                           
   474                           ;main.c: 81:         OSCCON = 0b01011010;
   475     0765  305A               	movlw	90
   476     0766  0021               	movlb	1	; select bank1
   477     0767  0099               	movwf	25	;volatile
   478     0768                     l731:
   479                           
   480                           ;main.c: 82:     OSCCONbits.SCS1 = 1;
   481     0768  1499               	bsf	25,1	;volatile
   482     0769                     l733:
   483                           
   484                           ;main.c: 85:     TRISA = 0b00000001;
   485     0769  3001               	movlw	1
   486     076A  008C               	movwf	12	;volatile
   487     076B                     l735:
   488                           
   489                           ;main.c: 86:     LATA = 0x00;
   490     076B  0022               	movlb	2	; select bank2
   491     076C  018C               	clrf	12	;volatile
   492     076D                     l737:
   493                           
   494                           ;main.c: 87:     ANSELAbits.ANSA0=1;
   495     076D  0023               	movlb	3	; select bank3
   496     076E  140C               	bsf	12,0	;volatile
   497                           
   498                           ;main.c: 88:     ADCON1bits.ADCS=000;
   499     076F  308F               	movlw	-113
   500     0770  0021               	movlb	1	; select bank1
   501     0771  059E               	andwf	30,f	;volatile
   502                           
   503                           ;main.c: 89:     ADCON1bits.ADPREF =00;
   504     0772  30FC               	movlw	-4
   505     0773  059E               	andwf	30,f	;volatile
   506                           
   507                           ;main.c: 90:     ADCON0bits.CHS =0000;
   508     0774  3083               	movlw	-125
   509     0775  059D               	andwf	29,f	;volatile
   510     0776                     l739:
   511                           
   512                           ;main.c: 91:     ADCON1bits.ADFM=0;
   513     0776  139E               	bcf	30,7	;volatile
   514     0777                     l741:
   515                           
   516                           ;main.c: 104:     APFCONbits.RXDTSEL = 1;
   517     0777  0022               	movlb	2	; select bank2
   518     0778  179D               	bsf	29,7	;volatile
   519     0779                     l743:
   520                           
   521                           ;main.c: 105:     APFCONbits.TXCKSEL = 1;
   522     0779  151D               	bsf	29,2	;volatile
   523     077A                     l745:
   524                           
   525                           ;main.c: 106:     APFCONbits.P1BSEL = 0 ;
   526     077A  109D               	bcf	29,1	;volatile
   527     077B                     l747:
   528                           
   529                           ;main.c: 107:     TRISAbits.TRISA4 = 0;
   530     077B  0021               	movlb	1	; select bank1
   531     077C  120C               	bcf	12,4	;volatile
   532     077D                     l749:
   533                           
   534                           ;main.c: 108:     TRISAbits.TRISA5 = 1;
   535     077D  168C               	bsf	12,5	;volatile
   536     077E                     l751:
   537                           
   538                           ;main.c: 110:     BAUDCONbits.BRG16 = 1;
   539     077E  0023               	movlb	3	; select bank3
   540     077F  159F               	bsf	31,3	;volatile
   541     0780                     l753:
   542                           
   543                           ;main.c: 111:     SPBRG = 25;
   544     0780  3019               	movlw	25
   545     0781  009B               	movwf	27	;volatile
   546     0782                     l755:
   547                           
   548                           ;main.c: 114:     TXSTA = 0b00110110;
   549     0782  3036               	movlw	54
   550     0783  009E               	movwf	30	;volatile
   551     0784                     l757:
   552                           
   553                           ;main.c: 115:     TXSTAbits.BRGH = 1;
   554     0784  151E               	bsf	30,2	;volatile
   555     0785                     l759:
   556                           
   557                           ;main.c: 116:     TXSTAbits.SYNC = 0;
   558     0785  121E               	bcf	30,4	;volatile
   559     0786                     l761:
   560                           
   561                           ;main.c: 117:     RCSTA = 0b10010000;
   562     0786  3090               	movlw	144
   563     0787  009D               	movwf	29	;volatile
   564     0788                     l763:
   565                           
   566                           ;main.c: 118:     ANSELA = 0x00;
   567     0788  018C               	clrf	12	;volatile
   568     0789                     l765:
   569                           
   570                           ;main.c: 120:     _delay((unsigned long)((100)*(1000000/4000.0)));
   571     0789  3021               	movlw	33
   572     078A  00F9               	movwf	??_main
   573     078B  3076               	movlw	118
   574     078C                     u107:
   575     078C  0B89               	decfsz	9,f
   576     078D  2F8C               	goto	u107
   577     078E  0BF9               	decfsz	??_main,f
   578     078F  2F8C               	goto	u107
   579     0790  3200               	nop2
   580     0791                     l767:
   581                           
   582                           ;main.c: 124:         LATAbits.LATA1 =0;
   583     0791  0022               	movlb	2	; select bank2
   584     0792  108C               	bcf	12,1	;volatile
   585     0793  0063               	sleep	;# 
   586     0794                     l769:
   587                           
   588                           ;main.c: 126:         __nop();
   589     0794  0000               	nop
   590     0795                     l771:
   591                           
   592                           ;main.c: 128:         if (acquisition==1)
   593     0795  0375               	decf	_acquisition,w
   594     0796  1D03               	btfss	3,2
   595     0797  2F99               	goto	u31
   596     0798  2F9A               	goto	u30
   597     0799                     u31:
   598     0799  2FB6               	goto	l84
   599     079A                     u30:
   600     079A                     l773:
   601                           
   602                           ;main.c: 129:         {;main.c: 132:             counterAcquisition = counterAcquisition
      +                          +1;
   603     079A  0870               	movf	_counterAcquisition,w
   604     079B  3E01               	addlw	1
   605     079C  00F0               	movwf	_counterAcquisition
   606     079D  0064               	clrwdt	;# 
   607     079E                     l775:
   608                           
   609                           ;main.c: 137:             if (counterAcquisition>thresholdCounterAcquisition)
   610     079E  30DD               	movlw	221
   611     079F  0270               	subwf	_counterAcquisition,w
   612     07A0  1C03               	skipc
   613     07A1  2FA3               	goto	u41
   614     07A2  2FA4               	goto	u40
   615     07A3                     u41:
   616     07A3  2F91               	goto	l767
   617     07A4                     u40:
   618     07A4                     l777:
   619                           
   620                           ;main.c: 138:              {;main.c: 139:                  counterAcquisition = 1;
   621     07A4  01F0               	clrf	_counterAcquisition
   622     07A5  0AF0               	incf	_counterAcquisition,f
   623                           
   624                           ;main.c: 140:                  LATAbits.LATA1 =1;
   625     07A6  0022               	movlb	2	; select bank2
   626     07A7  148C               	bsf	12,1	;volatile
   627     07A8                     l779:
   628                           
   629                           ;main.c: 141:                  adc_char = ADC_Lecture();
   630     07A8  3187  2749  3187   	fcall	_ADC_Lecture
   631     07AB  00F7               	movwf	_adc_char
   632     07AC                     l781:
   633                           
   634                           ;main.c: 142:                  LATAbits.LATA1 =0;
   635     07AC  0022               	movlb	2	; select bank2
   636     07AD  108C               	bcf	12,1	;volatile
   637     07AE                     l783:
   638                           
   639                           ;main.c: 143:                  if (adc_char>threshold2){
   640     07AE  30BC               	movlw	188
   641     07AF  0277               	subwf	_adc_char,w
   642     07B0  1C03               	skipc
   643     07B1  2FB3               	goto	u51
   644     07B2  2FB4               	goto	u50
   645     07B3                     u51:
   646     07B3  2F91               	goto	l767
   647     07B4                     u50:
   648     07B4                     l785:
   649                           
   650                           ;main.c: 144:                      acquisition=0;
   651     07B4  01F5               	clrf	_acquisition
   652     07B5  2F91               	goto	l767
   653     07B6                     l84:
   654     07B6  0064               	clrwdt	;# 
   655                           
   656                           ;main.c: 151:                 LATAbits.LATA1 =1;
   657     07B7  0022               	movlb	2	; select bank2
   658     07B8  148C               	bsf	12,1	;volatile
   659     07B9                     l787:
   660                           
   661                           ;main.c: 152:                adc_char = ADC_Lecture();
   662     07B9  3187  2749  3187   	fcall	_ADC_Lecture
   663     07BC  00F7               	movwf	_adc_char
   664     07BD                     l789:
   665                           
   666                           ;main.c: 158:                        LATAbits.LATA1 =0;
   667     07BD  0022               	movlb	2	; select bank2
   668     07BE  108C               	bcf	12,1	;volatile
   669     07BF                     l791:
   670                           
   671                           ;main.c: 159:                if (adc_char>threshold1)
   672     07BF  30B5               	movlw	181
   673     07C0  0277               	subwf	_adc_char,w
   674     07C1  1C03               	skipc
   675     07C2  2FC4               	goto	u61
   676     07C3  2FC5               	goto	u60
   677     07C4                     u61:
   678     07C4  2FD0               	goto	l797
   679     07C5                     u60:
   680     07C5                     l793:
   681                           
   682                           ;main.c: 161:                {;main.c: 162:                    counter = counter - 1;
   683     07C5  0878               	movf	_counter,w
   684     07C6  3EFF               	addlw	255
   685     07C7  00F8               	movwf	_counter
   686                           
   687                           ;main.c: 163:                    if (counter<1)
   688     07C8  0878               	movf	_counter,w
   689     07C9  1D03               	btfss	3,2
   690     07CA  2FCC               	goto	u71
   691     07CB  2FCD               	goto	u70
   692     07CC                     u71:
   693     07CC  2FDB               	goto	l90
   694     07CD                     u70:
   695     07CD                     l795:
   696                           
   697                           ;main.c: 164:                    {;main.c: 165:                        counter = 1;
   698     07CD  01F8               	clrf	_counter
   699     07CE  0AF8               	incf	_counter,f
   700     07CF  2FDB               	goto	l90
   701     07D0                     l797:
   702                           
   703                           ;main.c: 169:                {;main.c: 170:                    counter = counter +1;
   704     07D0  0878               	movf	_counter,w
   705     07D1  3E01               	addlw	1
   706     07D2  00F8               	movwf	_counter
   707     07D3                     l799:
   708                           
   709                           ;main.c: 171:                    if (counter>thresholdCounter)
   710     07D3  3015               	movlw	21
   711     07D4  0278               	subwf	_counter,w
   712     07D5  1C03               	skipc
   713     07D6  2FD8               	goto	u81
   714     07D7  2FD9               	goto	u80
   715     07D8                     u81:
   716     07D8  2FDB               	goto	l90
   717     07D9                     u80:
   718     07D9                     l801:
   719                           
   720                           ;main.c: 172:                    {;main.c: 173:                        counter = thresho
      +                          ldCounter;
   721     07D9  3014               	movlw	20
   722     07DA  00F8               	movwf	_counter
   723     07DB                     l90:	
   724                           ;main.c: 176:                }
   725                           
   726     07DB  0064               	clrwdt	;# 
   727     07DC                     l803:
   728                           
   729                           ;main.c: 180:                if (counter == thresholdCounter)
   730     07DC  3014               	movlw	20
   731     07DD  0678               	xorwf	_counter,w
   732     07DE  1D03               	btfss	3,2
   733     07DF  2FE1               	goto	u91
   734     07E0  2FE2               	goto	u90
   735     07E1                     u91:
   736     07E1  2FE7               	goto	l92
   737     07E2                     u90:
   738     07E2                     l805:
   739                           
   740                           ;main.c: 182:                {;main.c: 183:                    acquisition = 1;
   741     07E2  01F5               	clrf	_acquisition
   742     07E3  0AF5               	incf	_acquisition,f
   743                           
   744                           ;main.c: 189:                   LATAbits.LATA2=1;
   745     07E4  0022               	movlb	2	; select bank2
   746     07E5  150C               	bsf	12,2	;volatile
   747                           
   748                           ;main.c: 190:                }else
   749     07E6  2F91               	goto	l767
   750     07E7                     l92:
   751                           
   752                           ;main.c: 191:                {;main.c: 194:                   LATAbits.LATA2=0;
   753     07E7  0022               	movlb	2	; select bank2
   754     07E8  110C               	bcf	12,2	;volatile
   755     07E9  2F91               	goto	l767
   756     07EA  3180  2803         	ljmp	start
   757     07EC                     __end_of_main:
   758                           
   759                           	psect	text1
   760     0749                     __ptext1:	
   761 ;; *************** function _ADC_Lecture *****************
   762 ;; Defined at:
   763 ;;		line 44 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      unsigned char 
   770 ;; Registers used:
   771 ;;		wreg
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   777 ;;      Params:         0       0       0       0
   778 ;;      Locals:         0       0       0       0
   779 ;;      Temps:          0       0       0       0
   780 ;;      Totals:         0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790     0749                     _ADC_Lecture:	
   791                           ;psect for function _ADC_Lecture
   792                           
   793     0749                     l703:	
   794                           ;incstack = 0
   795                           ; Regs used in _ADC_Lecture: [wreg]
   796                           
   797                           
   798                           ;main.c: 46:   ADCON0bits.ADON = 1;
   799     0749  0021               	movlb	1	; select bank1
   800     074A  141D               	bsf	29,0	;volatile
   801     074B                     l705:
   802                           
   803                           ;main.c: 48:   _delay((unsigned long)((6)*(1000000/4000.0)));
   804     074B  30D6               	movlw	214
   805     074C                     u117:
   806     074C  3200               	nop2
   807     074D  3200               	nop2
   808     074E  0B89               	decfsz	9,f
   809     074F  2F4C               	goto	u117
   810     0750  3200               	nop2
   811     0751                     l707:
   812                           
   813                           ;main.c: 49:   ADCON0bits.GO = 1;
   814     0751  0021               	movlb	1	; select bank1
   815     0752  149D               	bsf	29,1	;volatile
   816     0753                     l63:	
   817                           ;main.c: 50:   while(ADCON0bits.GO_nDONE);
   818                           
   819     0753  189D               	btfsc	29,1	;volatile
   820     0754  2F56               	goto	u11
   821     0755  2F57               	goto	u10
   822     0756                     u11:
   823     0756  2F53               	goto	l63
   824     0757                     u10:
   825     0757                     l709:
   826                           
   827                           ;main.c: 52:   return (ADRESH);
   828     0757  081C               	movf	28,w	;volatile
   829     0758                     l66:
   830     0758  0008               	return
   831     0759                     __end_of_ADC_Lecture:
   832     007E                     btemp	set	126	;btemp
   833     007E                     wtemp0	set	126
   834                           
   835                           	psect	config
   836                           
   837                           ;Config register CONFIG1 @ 0x8007
   838                           ;	Oscillator Selection
   839                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   840                           ;	Watchdog Timer Enable
   841                           ;	WDTE = ON, WDT enabled
   842                           ;	Power-up Timer Enable
   843                           ;	PWRTE = OFF, PWRT disabled
   844                           ;	MCLR Pin Function Select
   845                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   846                           ;	Flash Program Memory Code Protection
   847                           ;	CP = OFF, Program memory code protection is disabled
   848                           ;	Data Memory Code Protection
   849                           ;	CPD = OFF, Data memory code protection is disabled
   850                           ;	Brown-out Reset Enable
   851                           ;	BOREN = ON, Brown-out Reset enabled
   852                           ;	Clock Out Enable
   853                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   854                           ;	Internal/External Switchover
   855                           ;	IESO = ON, Internal/External Switchover mode is enabled
   856                           ;	Fail-Safe Clock Monitor Enable
   857                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   858     8007                     	org	32775
   859     8007  3FFC               	dw	16380
   860                           
   861                           ;Config register CONFIG2 @ 0x8008
   862                           ;	Flash Memory Self-Write Protection
   863                           ;	WRT = OFF, Write protection off
   864                           ;	PLL Enable
   865                           ;	PLLEN = ON, 4x PLL enabled
   866                           ;	Stack Overflow/Underflow Reset Enable
   867                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   868                           ;	Brown-out Reset Voltage Selection
   869                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   870                           ;	In-Circuit Debugger Mode
   871                           ;	DEBUG = 0x1, unprogrammed default
   872                           ;	Low-Voltage Programming Enable
   873                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   874     8008                     	org	32776
   875     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         3
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
                        _ADC_Lecture
 ---------------------------------------------------------------------------------
 (1) _ADC_Lecture                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Lecture

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      1       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 19 03:02:11 2024

                         l63 0753                           l66 0758                           l90 07DB  
                         l92 07E7                           l84 07B6                           u10 0757  
                         u11 0756                           u30 079A                           u31 0799  
                         u40 07A4                           u41 07A3                           u50 07B4  
                         u51 07B3                           u60 07C5                           u61 07C4  
                         u70 07CD                           u71 07CC                           u80 07D9  
                         u81 07D8                           u90 07E2                           u91 07E1  
                        l703 0749                          l705 074B                          l801 07D9  
                        l721 0760                          l707 0751                          l803 07DC  
                        l731 0768                          l723 0761                          l709 0757  
                        l805 07E2                          l741 0777                          l733 0769  
                        l725 0762                          l717 0759                          l751 077E  
                        l743 0779                          l735 076B                          l727 0764  
                        l719 075E                          l761 0786                          l753 0780  
                        l745 077A                          l737 076D                          l729 0765  
                        l771 0795                          l763 0788                          l755 0782  
                        l747 077B                          l739 0776                          l781 07AC  
                        l773 079A                          l765 0789                          l757 0784  
                        l749 077D                          l791 07BF                          l783 07AE  
                        l775 079E                          l767 0791                          l759 0785  
                        l793 07C5                          l785 07B4                          l777 07A4  
                        l769 0794                          l795 07CD                          l787 07B9  
                        l779 07A8                          l797 07D0                          l789 07BD  
                        l799 07D3                          u107 078C                          u117 074C  
                        wreg 0009                         _LATA 010C                         _PIE1 0091  
                       _PIR1 0011                         _main 0759                         fsr0h 0005  
                       fsr0l 0004                         btemp 007E                         start 0003  
                      ?_main 0079                        _RCSTA 019D                        _SPBRG 019B  
                      _TRISA 008C                        _TXSTA 019E                        status 0003  
                      wtemp0 007E              __initialization 07EC                 __end_of_main 07EC  
                     ??_main 0079                       _ADRESH 009C                       _ANSELA 018C  
                     _INTCON 000B                       _OSCCON 0099                 __pdataCOMMON 0070  
    __end_of__initialization 07FD               __pcstackCOMMON 0079               _OPTION_REGbits 0095  
                 __pnvCOMMON 0078                   __pmaintext 0759                ??_ADC_Lecture 0079  
                    __ptext1 0749                      _counter 0078         end_of_initialization 07FD  
        __end_of_ADC_Lecture 0759  _thresholdCounterAcquisition 0071                   _threshold1 0074  
                 _threshold2 0073                    _TRISAbits 008C                    _TXSTAbits 019E  
                _BAUDCONbits 019F                __pidataCOMMON 0744          start_initialization 07EC  
                _ADC_Lecture 0749                  __pbssCOMMON 0075                    ___latbits 0001  
           _thresholdCounter 0072                  _acquisition 0075                     _LATAbits 010C  
                  _uart_data 0076                   _ADCON0bits 009D                   _ADCON1bits 009E  
                 _APFCONbits 011D                     _adc_char 0077                   _ANSELAbits 018C  
               ?_ADC_Lecture 0079                   _INTCONbits 000B           _counterAcquisition 0070  
                 _OSCCONbits 0099  
